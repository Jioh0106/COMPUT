<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.deepen.mapper.PlansMapper">
	
	<!-- 생산계획 목록 조회  -->
	<select id="getPlanList" resultType="com.deepen.domain.PlansDTO" >
		SELECT plan_id
			 , p.order_id 
			 , p.sale_no 
			 , p.emp_id 
			 , e.emp_name
			 , p.plan_status
			 , cd.COMMON_DETAIL_NAME AS status_name
			 , plan_date
			 , plan_update
			 , plan_start_date
			 , plan_end_date
			 , plan_priority
		  FROM PLANS p 
		       JOIN ORDERS o ON p.ORDER_ID = o.ORDER_ID 
		       JOIN EMPLOYEES e ON p.EMP_ID = e.EMP_ID 
		       JOIN COMMON_DETAIL cd ON p.PLAN_STATUS = cd.COMMON_DETAIL_CODE
	</select>
	
	<!-- 생산계획 등록 목록 조회  -->
	<select id="getRegPlanList" resultType="com.deepen.domain.SaleDTO" >
		SELECT s.SALE_NO 
			 , s.ORDER_ID 
			 , s.PRODUCT_NO 
			 , p.PRODUCT_NAME 
			 , s.SALE_UNIT 
			 , cd.COMMON_DETAIL_NAME AS unit_name
			 , s.SALE_VOL 
			 , s.SALE_DEADLINE 
			 , c.client_name 
		  FROM SALE s 
		       JOIN PRODUCT p ON s.PRODUCT_NO = p.PRODUCT_NO 
		       JOIN COMMON_DETAIL cd ON s.SALE_UNIT = cd.COMMON_DETAIL_CODE 
		       JOIN ORDERS o ON s.ORDER_ID = o.ORDER_ID
		       JOIN CLIENT c ON o.CLIENT_NO = c.CLIENT_NO
		 WHERE s.SALE_STATUS = '정상'
		   AND NOT EXISTS(
			   SELECT 1 
			   FROM PLANS pl
			   WHERE s.SALE_NO  = pl.sale_no
		  	 ) 
		 ORDER BY s.SALE_NO
	</select>
	
	<!-- 상품 BOM  -->
	<select id="getUseBoMList" resultType="com.deepen.domain.SaleDTO" >
		SELECT BOM_NO 
			 , PRODUCT_NO 
			 , MTRPRODUCT_NO 
			 , MTR_NO 
			 , BOM_UNIT 
			 , BOM_QUANTITY 
			 , PROCESS_NAME
		  FROM BOM
		 WHERE BOM_STATUS = 'Y'
		 START WITH PRODUCT_NO = #{product_no}
	   CONNECT BY PRIOR MTRPRODUCT_NO = PRODUCT_NO;
	</select>
	
</mapper>


