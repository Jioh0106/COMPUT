<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.deepen.mapper.WorkInstructionMapper">

	<select id="selectWorkerInfoListByPosition" resultType="java.util.Map">
		SELECT 
			e.emp_id AS "no", 
			e.emp_name AS "name",
			cdd.common_detail_name AS "dept",
			cdp.common_detail_name AS "position",
			e.emp_phone AS "phone",
			e.emp_email AS "email"
		FROM employees e
		LEFT JOIN COMMON_DETAIL cdd 
		    ON cdd.common_detail_code LIKE 'DEPT%'
		    AND cdd.common_detail_code = e.emp_dept
		    AND cdd.common_detail_status = 'Y'
		LEFT JOIN COMMON_DETAIL cdp
		    ON cdp.common_detail_code LIKE 'PSTN%'
		    AND cdp.common_detail_code = e.emp_position
		    AND cdp.common_detail_status = 'Y'
		WHERE e.emp_dept = 'DEPT007'
		ORDER BY emp_no
	</select>
	
	<select id="selectProcessInfo" resultType="com.deepen.domain.ProcessInfoDTO">
		SELECT 
			process_no AS "processNo", 
			process_name AS "processName", 
			process_priority AS "processPriority"
		FROM process_info
		WHERE is_active = 'Y'
	</select>
	
	<select id="selectLineInfo" resultType="com.deepen.domain.LineInfoDTO">
		SELECT 
			line_no AS "lineNo", 
			line_name AS "lineName" 
		FROM line_info
		WHERE is_active = 'Y'
	</select>
	
	<select id="selectRegWorkInstruction" resultType="java.util.Map">
		SELECT 
		    p.plan_id,
		    o.order_id,
		    s.product_no,
		    pd.product_name,
		    s.sale_vol,
		    TO_CHAR(p.plan_start_date, 'YYYY-MM-DD') AS "PLAN_START_DATE",
		    TO_CHAR(p.plan_end_date, 'YYYY-MM-DD') AS "PLAN_END_DATE",
		    p.plan_priority 
		FROM plans p
		JOIN orders o 
		    ON o.order_id = p.order_id
		JOIN sale s 
		    ON p.order_id = s.order_id
		    AND REGEXP_SUBSTR(p.plan_id, '[^-]+', 1, 3) = s.product_no
		JOIN product pd
		    ON pd.product_no = s.product_no
		WHERE o.order_type = '수주'
		    AND p.plan_status IN ('PRGR001', 'PRGR004')
		ORDER BY p.plan_id
	</select>
	
	<select id="selectPlanItemsWithSeparatedSemiProducts" parameterType="Map">
		SELECT 
		    p.plan_id,
		    o.order_id,
		    TO_NUMBER(NVL2(b.MTRPRODUCT_NO, b.MTRPRODUCT_NO, b.MTR_NO)) AS product_no,
		    CASE 
		        WHEN b.MTRPRODUCT_NO IS NOT NULL THEN pdw.product_name  
		        ELSE m.MTR_NAME  
		    END AS product_name,
		    TO_NUMBER(NVL2(b.mtrproduct_no, b.bom_quantity, s.sale_vol)) AS vol,
		    TO_CHAR(p.plan_start_date, 'YYYY-MM-DD') AS "PLAN_START_DATE",
		    TO_CHAR(p.plan_end_date, 'YYYY-MM-DD') AS "PLAN_END_DATE",
		    p.plan_priority 
		FROM plans p
		JOIN orders o 
		    ON o.order_id = p.order_id
		JOIN SALE s 
		    ON p.order_id = s.order_id
		    AND REGEXP_SUBSTR(p.plan_id, '[^-]+', 1, 3) = s.product_no
		JOIN PRODUCT pd
		    ON pd.product_no = s.product_no
		LEFT JOIN bom b
		    ON pd.product_no = b.product_no
		LEFT JOIN MATERIAL m 
		    ON b.mtr_no = m.mtr_no
		LEFT JOIN PRODUCT pdw
		    ON pdw.product_no = b.mtrproduct_no
		WHERE o.order_type = '수주'
		    AND p.plan_status IN ('PRGR001', 'PRGR004')
		    AND b.mtrproduct_no IS NOT NULL
		    AND p.plan_id = #{PLAN_ID}
		UNION ALL
		SELECT 
		    p.plan_id,
		    o.order_id,
		    s.product_no,
		    pd.product_name,
		    s.sale_vol,
		    TO_CHAR(p.plan_start_date, 'YYYY-MM-DD') AS "PLAN_START_DATE",
		    TO_CHAR(p.plan_end_date, 'YYYY-MM-DD') AS "PLAN_END_DATE",
		    p.plan_priority 
		FROM plans p
		JOIN orders o 
		    ON o.order_id = p.order_id
		JOIN SALE s 
		    ON p.order_id = s.order_id
		    AND REGEXP_SUBSTR(p.plan_id, '[^-]+', 1, 3) = s.product_no
		JOIN PRODUCT pd
		    ON pd.product_no = s.product_no
		WHERE o.order_type = '수주'
		    AND p.plan_status IN ('PRGR001', 'PRGR004')
		    AND p.plan_id = #{PLAN_ID}
	</select>
	
	<insert id="insertWorkInstruction" parameterType="Map">
		INSERT into work_instruction (
			plan_id,
			product_no,
			product_name,
			quantity,
			process_no,
			process_name
<!-- 			,emp_id -->
		) VALUES (
			#{PLAN_ID},
			#{PRODUCT_NO},
			#{PRODUCT_NAME},
			#{VOL},
			#{PROCESS_NO},
        	#{PROCESS_NAME}
<!--         	,#{EMP_ID} -->
		)
	</insert>
	
	<select id="selectDeduplicateProcessesNo" parameterType="Integer" resultType="String">
		WITH process_split AS (
		    SELECT DISTINCT
		        p.product_no AS productNo,
		        REGEXP_SUBSTR(b.process_name, '[^/]+', 1, LEVEL) AS process_no
		    FROM product p
		    LEFT JOIN bom b
		        ON p.product_no = b.product_no
		    WHERE p.product_no = #{productNo}
		    CONNECT BY REGEXP_SUBSTR(b.process_name, '[^/]+', 1, LEVEL) IS NOT NULL 
		        AND PRIOR p.product_no = p.product_no
		        AND PRIOR SYS_GUID() IS NOT NULL
		)
		SELECT 
		    LISTAGG(ps.process_no, '/') WITHIN GROUP (
		        ORDER BY 
		            DECODE(ps.process_no, '1', 1, '2', 2, '3', 3, '4', 4)
		    ) AS process_no_list
		FROM process_split ps
		GROUP BY ps.productNo
		ORDER BY ps.productNo
	</select>
	
	<select id="selectDeduplicateProcessesName" parameterType="Integer" resultType="String">
		WITH process_split AS (
		    SELECT DISTINCT
		        p.product_no AS productNo,
		        REGEXP_SUBSTR(b.process_name, '[^/]+', 1, LEVEL) AS process_no
		    FROM product p
		    LEFT JOIN bom b
		        ON p.product_no = b.product_no
		    WHERE p.product_no = #{productNo}
		    CONNECT BY REGEXP_SUBSTR(b.process_name, '[^/]+', 1, LEVEL) IS NOT NULL 
		        AND PRIOR p.product_no = p.product_no
		        AND PRIOR SYS_GUID() IS NOT NULL
		)
		SELECT 
		    LISTAGG(DISTINCT pi.process_name, '/') WITHIN GROUP (
		        ORDER BY 
		            DECODE(pi.process_name, '가공', 1, '열처리', 2, '조립', 3, '표면처리', 4)
		    ) AS process_name
		FROM process_split ps
		JOIN process_info pi
		    ON ps.process_no = pi.process_no
		GROUP BY ps.productNo
		ORDER BY ps.productNo
	</select>
	
	<update id="updatePlanStatus" parameterType="Map">
		UPDATE plans SET 
			plan_status = 'PRGR005' 
		WHERE plan_id = #{PLAN_ID}
	</update>
	
	<select id="selectWorkInstruction" resultType="java.util.Map">
		SELECT 
			wi.wi_no AS "wi_no",
		    wi.plan_id AS "plan_id",
		    wi.product_no AS "product_no",
		    wi.product_name AS "product_name",
		    wi.quantity AS "vol",
		    pd.product_unit AS "unit",
		    cdu.common_detail_name AS "unit_name",
		    wi.process_no AS "process_no",
		    wi.process_name AS "process_name",
		    wi.line_no AS "line_no",
		    li.line_name AS "line_name",
		    wi.wi_status AS "wi_status",
		    cdw.common_detail_name AS "wi_status_name",
		    wi.qc_status AS "qc_status",
		    TO_CHAR(wi.wi_start_date, 'YYYY-MM-DD') AS "start_date",
		    TO_CHAR(wi.wi_end_date, 'YYYY-MM-DD') AS "end_date",
		    wi.emp_id AS "emp_id",
		    e.emp_name AS "emp_name"
		FROM work_instruction wi 
		JOIN plans p 
			ON wi.plan_id = p.plan_id
		JOIN orders o 
		    ON o.order_id = p.order_id
		JOIN SALE s 
		    ON p.order_id = s.order_id
		    AND REGEXP_SUBSTR(p.plan_id, '[^-]+', 1, 3) = s.product_no
		JOIN PRODUCT pd
		    ON pd.product_no = s.product_no
		LEFT JOIN line_info li
			ON li.line_no = wi.line_no
		LEFT JOIN common_detail cdu
		    ON cdu.common_detail_code LIKE 'UNIT%'
		    AND cdu.common_detail_code = pd.product_unit
		    AND cdu.common_detail_status = 'Y'
		LEFT JOIN common_detail cdw
		    ON cdw.common_detail_code LIKE 'PRGR%'
		    AND cdw.common_detail_code = wi.wi_status
		    AND cdw.common_detail_status = 'Y'
		LEFT JOIN employees e
			ON wi.emp_id = e.emp_id
		WHERE o.order_type = '수주'
		ORDER BY wi.wi_no
	</select>
	
	<select id="selectMaterialsByProductNo" resultType="java.util.Map">
		SELECT
			i.inventory_no AS "invenNO", 
			b.mtr_no AS "mtlNo",
			m.mtr_name AS "mtlName",
			i.warehouse_id AS "warehouseId",
			w.warehouse_name AS "warehouse",
			i.zone AS "zone",
			b.bom_quantity AS "qty",
			b.bom_unit AS "unit",
			cd.common_detail_name AS "unitName"
		FROM bom b
		JOIN product p
			ON p.product_no = b.product_no
		JOIN material m
			ON m.mtr_no = b.mtr_no
		LEFT JOIN inventory i
			ON i.item_no = m.mtr_no
		LEFT JOIN warehouse w
			ON w.warehouse_id = i.warehouse_id
		LEFT JOIN common_detail cd
		    ON cd.common_detail_code LIKE 'UNIT%'
		    AND cd.common_detail_code = b.bom_unit
		    AND cd.common_detail_status = 'Y'
		LEFT JOIN product p2
		    ON p2.product_no = b.mtr_no
		WHERE p.product_no = #{productNo}
		AND b.mtr_no IS NOT NULL
	</select>
	
	<insert id="insertMaterialInWareHouse" parameterType="Map">
		INSERT INTO outbound (
			inventory_no,
			out_qty,
			wi_no,
			warehouse_id,
			zone
			
		) VALUES (
			#{invenNO},
			#{calculatedQty},
			#{wiNo},
			#{warehouseId},
			#{zone}
		)
	</insert>
	
	<update id="updateWorkStartInfo" parameterType="Map">
		UPDATE work_instruction SET 
			line_no = #{line_name},
			wi_status = 'PRGR002',
			wi_start_date = sysdate,
			emp_id = #{empId}
		WHERE wi_no = #{wi_no}
	</update>
</mapper>



